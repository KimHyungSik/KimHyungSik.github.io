---
layout: post
title:  Kotlin Scope 함수 알아보기
categories: [Kotlin]
tags: [ Kotlin, Scope]
comments: true 
---

Scope Funcions
-------

객체의 일시적인 범위가 생기고 그 범위내에서 함수처리, 속성 변경등에 사용 되는함수

https://kotlinlang.org/docs/scope-functions.html#function-selection

let
----------
return: 람다 결과
not-ull 객체로 null이 아닌 값을 반환한다(null-safety)

```kt
  fun <T, R> T.let(block: (T) -> R): R
``` 
자기 자신인 T를 받아 R을 반환 한다.
마지막 블로의 형태에 따라 return값이 달라진다

```kt
  val value = letValuse?.let{it.value} ?: "defalut value"
``` 
뒤에 __?:__ 를 붙여 기본값을 지정할 수있다

with
---------
return: 람다 결과

```kt
 fun <T, R> with(receiver: T, block: T.() -> R): R
 
val numbers = mutableListOf("one", "two", "three")
with(numbers) {
    println("'with' is called with argument $this")
    println("It contains $size elements")
}
``` 
컨택스트 객체를 사용하여 함수를 호출하는 경우에 사용하는 것 을 권장한다

run 
-----
return: 람다 결과

```kt
  fun <T, R> T.run(block: T.() -> R): R
```
컨택스트 객체를 확장 함수 처럼 사용 할 수 있다.
```kt
var str = run{
  val arg = 1
  "arg = $arg"
}
```
단독으로 비확장 함수 처럼 사용할수도 있다

TODO:: apply, also, 관련 사용법들 

